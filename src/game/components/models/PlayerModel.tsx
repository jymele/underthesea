/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, useAnimations } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    arms: THREE.SkinnedMesh;
    body: THREE.SkinnedMesh;
    head: THREE.SkinnedMesh;
    Bone: THREE.Bone;
    Bone001: THREE.Bone;
    Bone002: THREE.Bone;
    Bone003: THREE.Bone;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

type ActionName = "Walk";
type GLTFActions = Record<ActionName, THREE.AnimationClip>;

export default function PlayerModel(props: JSX.IntrinsicElements["group"]) {
  const group = useRef<THREE.Group>();
  const { nodes, materials, animations } = useGLTF(
    "/models/player.glb"
  ) as GLTFResult;
  const { actions } = useAnimations<GLTFActions>(animations, group);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" position={[0, -1.373, 0]}>
          <skinnedMesh
            name="arms"
            geometry={nodes.arms.geometry}
            material={materials.Material}
            skeleton={nodes.arms.skeleton}
          />
          <skinnedMesh
            name="body"
            geometry={nodes.body.geometry}
            material={materials.Material}
            skeleton={nodes.body.skeleton}
          />
          <skinnedMesh
            name="head"
            geometry={nodes.head.geometry}
            material={materials.Material}
            skeleton={nodes.head.skeleton}
          />
          <primitive object={nodes.Bone} />
          <primitive object={nodes.Bone001} />
          <primitive object={nodes.Bone002} />
          <primitive object={nodes.Bone003} />
        </group>
      </group>
    </group>
  );
}

useGLTF.preload("/models/player.glb");
